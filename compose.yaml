services:
  product-prometheus:
    image: prom/prometheus
    container_name: product-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  ## Tempo
  product-tempo:
    image: grafana/tempo
    container_name: product-tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
       - ./docker/tempo/tempo.yml:/etc/tempo.yaml:ro
       - ./docker/tempo/tempo-data:/tmp/tempo
    ports:
       - "3200:3200" # Tempo
       - "9411:9411" # zipkin
  product-loki:
    image: grafana/loki:main
    container_name: product-loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"
  product-grafana:
    image: grafana/grafana
    container_name: product-grafana
    restart: unless-stopped
    ports:
       - "3000:3000"
    volumes:
       - ./docker/grafana:/etc/grafana/provisioning/datasources:ro
    environment:
       - GF_SECURITY_ADMIN_USER=admin
       - GF_SECURITY_ADMIN_PASSWORD=123456
  ##product observability app
  product-observability:
    build: ./
    container_name: product-observability
    depends_on:
        - product-tempo
        - product-loki
        - postgres
    restart: always
    ports:
        - "8082:8082"
  ## postgres
  postgres:
    container_name: product_postgres
    image: 'postgres:latest'
    environment:
      POSTGRES_DB: product-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data

    ports:
      - '5432:5432'
    restart: unless-stopped

  pgadmin:
    container_name: product_pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@localhost.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 5100
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - ./docker/pgadmin:/var/lib/pgadmin/data
      - ./docker_pgadmin_servers.json:/pgadmin4/servers.json
    ports:
      - '5100:5100'
    entrypoint:
      - "/bin/sh"
      - "-c"
      - "/bin/echo 'postgres:5432:*:postgres:admin' > /tmp/pgpassfile && chmod 600 /tmp/pgpassfile && /entrypoint.sh"

  ##  zipkin:
  ##    image: 'openzipkin/zipkin:latest'
  ##    ports:
  ##     - '9411'
